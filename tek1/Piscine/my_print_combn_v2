#include <stdio.h>

int unity(int num, int pow)
{
    int res = num;
    int count = 0;
    
    if (pow == 0)
        return (1);
    while (count < pow - 1)
    {
        res *= num;
        count++;
    }
    return (res);
}

int init_number(int n)
{
    int number = 0, count = 0;
    n--;
    
    while (n - count > 0)
    {
        number += (n - count) * unity(10, count);
        count++;
    }
    return (number);
}

void print_num(int num, int n)
{
    int count = 0;
    int tmp;
    
    while (count < n)
    {
        tmp = num / unity(10, n - 1 - count) % 10;
        printf("%d", tmp);
        count++;
    }
    printf(", ");
}

int check_num(int num)
{
    int save = num;
    int tmp = num % 10;
    
    while (save / 10 != 0)
    {
        save /= 10;
        if (tmp > save % 10)
            tmp = save % 10;
        else
            return (1);
    }
    return (0);
}

int my_print_combn(int n)
{
    if (n > 10 || n == 0)
        return (1);
    int count = init_number(n);
    if (n == 10)
    {
        print_num(count, n);
        return (0);
    }
    while (count / unity(10, n - 1) <= (10 - n))
    {
        if (check_num(count) == 0)
            print_num(count, n);
        count++;
    }
    return (0);
}
